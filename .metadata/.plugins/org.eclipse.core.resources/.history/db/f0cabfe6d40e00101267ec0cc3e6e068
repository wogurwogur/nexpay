
#logging:
#  level:
#    org.springframework.security: DEBUG
#    #org.springframework.web: DEBUG
#    org.springframework.security.oauth2: TRACE
#    org.springframework.security.web: TRACE


spring: # 주의할 점은 내용작성시 들여쓰기 내어쓰기시 공백개수를 반드시 꼭 지켜야 한다. 
  profiles: #실행환경(dev(개발),test(테스트),local(로컬),prod(운영))
    active: local 

  datasource-antico: #DB 접속이 1개만 있을 경우
    driver-class-name: oracle.jdbc.OracleDriver
    jdbcUrl: jdbc:oracle:thin:@211.238.142.186:1521:xe
    username: final_orauser1
    password: gclass
    type: com.zaxxer.hikari.HikariDataSource
    hikari: #커넥션풀 
      connection-timeout : 30000 #클라이언트가 pool에 connection을 요청하는데 기다리는 최대시간을 설정 30초
      maximum-pool-size : 10 #최대 커넥션 개수 설정
      max-lifetime: 1800000  #커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명시간 1,800초(30분)

  # mongodb+srv://final_mongouser1:gclass@clusterantico.ihfo0.mongodb.net/?retryWrites=true&w=majority&appName=ClusterAntico
  data:
    mongodb:
      uri: ENC(0sX0JRnyjrndUJBkloJnMwHkzLVPaKnUH/+jdaqPTVN6VHyvvJdRpTdLrY7SKoGqiAmAbNh0rkCGdbGlV09mxgHBKqHWAku4c6LkeFTzmW8creJJ8k1JVw1+H0pTCxbeqN+wHGXwU1UJ3vGVY8/FVtvyjD0TGYkZAUsV/WAwOHc7XMz0vrh4EA==)
      
  messages: #메시지(파일이 여러개일 경우 ,로 구분)
    basename: messages.validation
    encoding: UTF-8

  devtools: #View reload
    livereload:
      enabled: true

    restart: #컨트롤러, 모델단이 바뀌었을 때 프로젝트 재시작(reload)
      enabled: true #재시작(reload) 함

  servlet:
    multipart:
      max-file-size: 5MB     # 파일 업로드 용량제한 설정하기. 기본값은 (1MB)
      max-request-size: 20MB  # 파일 및 파일을 제외한 input 태그값 업로드 용량제한 설정하기. (1MB)


  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ENC(bUwjDnfUHjtP0Msilg9YiLjty02Jk+G6K6I0TmYYEY1Sh4L8/1+clT6STKCm4GWHQZ4Tp4At5CpvkIkAV7NfgJkMrE7KvODrRrfCr9f9IrYOprEweRCdsw==)
            client-secret: ENC(8vism1QymVlbaFkN1wEGJ7vk1CQeJAMlin79Pd3EucWCx7VgYnRtDoHadigDVjSR)
            scope: profile, email, https://www.googleapis.com/auth/user.phonenumbers.read
            
             

          naver:
            client-id: ENC(9F6I9p4gCMsFEZqLqx5tsGa1PWxzlhzBFMkx6xmd5UU=)
            client-secret: ENC(Rh66fH+4xC/FXcInr/6c3QYY+8WglzvJ)
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost/antico/login/oauth2/code/naver
            scope: name, email, profile_image
            client-name: Naver
                  
          kakao:
            client-id: ENC(ed6mZk2ojK8dP9C5260yVzMQ9KWN/8wo7OYMRdGAiJmioBS89piPCTAdoLuJYZo4)
            client-secret: ENC(MRorWkaXAopO2SgeLNwBQVlE5P8+PiSfBvc1omaj4p3ApeBjVxYUbqZULWnma4rx)
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: account_email
            redirect-uri: http://localhost/antico/login/oauth2/code/kakao
            client-name: kakao
                
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response


          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id


mybatis: #mybatis 설정
  configuration:
    map-underscore-to-camel-case: true  
  #type-aliases-package: com.spring.app.**.domain 
  #mapper-locations: com/spring/app/**/mapper/*.xml   #src/main/java 아래 패키지속에 매퍼파일을 만드는 경우 
  mapper-locations: mybatis/mapper/**/*.xml          #src/main/resources 아래 폴더속에 매퍼파일을 만드는 경우

server:
  port: 80
  servlet:
    context-path: /antico   
    encoding:
      charset: UTF-8
      enabled: true #http 인코딩 지원을 활성화할지 여부
      force: true #post 방식으로 전송했을때 한글데이터가 안깨지도록 함.

# Jasypt 암호화 설정
jasypt:
  encryptor:
    bean: jasyptEncryptor
    password : ${JASYPT_ENCRYPTOR_PASSWORD}

# aws s3 설정
cloud:
  aws:
    s3:
      bucket: antico-uploads-files
      stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: ENC(bvAkCaRASAQvgnrGC808ZQulHHVIGuveSHlqFmtXGLM=)
      secretKey: ENC(uZP25eC9J9oLHqiOV5/GjNcrHRL7yA8mrrZ3sGTwxJMDYg44Gh/LkJ8fHBp+k4xY6IOx/gdp/zk=)

# kakao 공유하기 api
kakao:
  apikey: ENC(cb7pRmtUMOz1N4am9q3VZmZI8sh+20ladaa2nbrS5m44SfdPtB6o1PNoDU4bNUzh)

# 포인트 충전하기 api
pointcharge:
  chargekey: ENC(5kDANTybdoAQAvmPxAVioZZy60aWlvGu)




